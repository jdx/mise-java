name: "Update Meta Data"

on:
  schedule:
    - cron: '0 22 * * *'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  JMETA_DATABASE_URL: sqlite://data/metadata.sqlite3
  RUST_BACKTRACE: 1
  RUST_LOG: jmeta=INFO
  GH_TOKEN: ${{ secrets.GH_PAT }}

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.head_ref }}

      - uses: Swatinem/rust-cache@v2

      - uses: ccorsi/setup-sqlite@v2
        with:
          sqlite-version: 3.43.2

      - name: Get latest artifact run id
        run: |
            # ARTIFACT_RUN_ID=$(gh run list --json databaseId --workflow=update.yml --limit 1 | jq -r '.[0].databaseId')
            ARTIFACT_RUN_ID=$(curl -s -H "Authorization: token ${{ secrets.GH_PAT }}" "https://api.github.com/repos/${{ github.repository }}/actions/artifacts?per_page=1" | jq '.artifacts[0].workflow_run.id')
            if [ "$ARTIFACT_RUN_ID" == "null" ]; then
                ARTIFACT_RUN_ID=""
            fi
            echo "ARTIFACT_RUN_ID=$ARTIFACT_RUN_ID" >> $GITHUB_ENV

      - name: Download SQLite database
        uses: actions/download-artifact@v4
        if: ${{ env.ARTIFACT_RUN_ID != '' }}
        with:
            name: metadata-db
            path: ./data/
            run-id: ${{ env.ARTIFACT_RUN_ID }}
            # REQUIRED. See https://github.com/actions/download-artifact?tab=readme-ov-file#download-artifacts-from-other-workflow-runs-or-repositories
            github-token: ${{ secrets.GH_PAT }}
        continue-on-error: true

      - name: Initialize SQLite database
        if: ${{ env.ARTIFACT_RUN_ID == '' }}
        run: |
          echo "Database does not exist. Initializing..."
          mkdir -p ./data
          sqlite3 ./data/metadata.sqlite3 < ./sql/schema.sql

      - name: Verify downloaded artifact
        run: |
          echo "Checking if table exists..."
          sqlite3 ./data/metadata.sqlite3 "SELECT name FROM sqlite_master WHERE type='table' AND name='JAVA_META_DATA';"

      - name: Update Meta Data
        run: |
          cargo run -- fetch

      - name: Upload SQLite database
        uses: actions/upload-artifact@v4
        with:
            # Name of the artifact to upload, make sure to match the name in the download step
            name: metadata-db
            path: ./data/metadata.sqlite3
            if-no-files-found: error
